<?php/** * Clase de métodos de inserción, modificación, eliminación y consulta sobre la tabla usuarios * * @author Nelson D. Garzón M. */@session_start();include_once(dirname(__FILE__) . '/../data.bases/connection.mysql.class.php');include_once(dirname(__FILE__) . '/audit.dao.class.php');class users {    private $conn;    private $audit;    function users() {        $this->conn = new connection();        $this->audit = new audit();    }    function get_all_count_users() {        $record_set = $this->conn->db->Execute('SELECT COUNT(*) FROM usuario');        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users($order, $index, $page) {        $record_set = $this->conn->db->Execute('SELECT * FROM usuario ORDER BY ' . $order . ' LIMIT ' . $index . ',' . $page);        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_by_group($group) {        $record_set = $this->conn->db->Execute('SELECT u.*, m.nombre as materia FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario INNER JOIN carrera_semestre_materia csm ON im.carrera_semestre_materia = csm.id INNER JOIN materia m ON csm.materia = m.id WHERE im.grupo = ? AND u.rol = 3 ORDER BY u.nombres ASC', array($group));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list() {        $record_set = $this->conn->db->Execute("SELECT id, CONCAT(nombres, ' ',apellidos) as nombre, documento FROM usuario ORDER BY nombres ASC ");        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list_by_group($group) {        $record_set = $this->conn->db->Execute("SELECT u.id, CONCAT(u.nombres, ' ',u.apellidos) as nombre, u.documento FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo = ? AND u.rol = 3 ORDER BY nombres ASC ", array($group));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list_by_registered() {        $record_set = $this->conn->db->Execute("SELECT DISTINCT u.id, CONCAT(u.nombres, ' ',u.apellidos, ' | ',r.nombre, ' |') as nombre, documento FROM usuario u INNER JOIN usuario_carrera uc ON u.id = uc.usuario INNER JOIN carrera_semestre_materia csm ON uc.carrera = csm.carrera INNER JOIN rol r ON u.rol = r.id ORDER BY u.rol,u.nombres,u.apellidos ASC ");        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list_by_registered_by_student_only_students($id) {        $record_set = $this->conn->db->Execute("SELECT DISTINCT u.id, CONCAT(u.nombres, ' ',u.apellidos) as nombre, documento FROM usuario u INNER JOIN usuario_carrera uc ON u.id = uc.usuario INNER JOIN carrera_semestre_materia csm ON uc.carrera = csm.carrera WHERE u.id = ? ORDER BY u.nombres,u.apellidos ASC ", array($id));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list_by_registered_only_students() {        $record_set = $this->conn->db->Execute("SELECT DISTINCT u.id, CONCAT(u.nombres, ' ',u.apellidos) as nombre, documento FROM usuario u INNER JOIN usuario_carrera uc ON u.id = uc.usuario INNER JOIN carrera_semestre_materia csm ON uc.carrera = csm.carrera WHERE u.rol = 3 ORDER BY u.nombres,u.apellidos ASC ");        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_all_users_list_by_registered_by_teacher_only_students($id) {        $record_set = $this->conn->db->Execute("SELECT DISTINCT u.id, CONCAT(u.nombres, ' ',u.apellidos,' (',g.nombre,')') as nombre, documento FROM usuario u INNER JOIN usuario_carrera uc ON u.id = uc.usuario INNER JOIN carrera_semestre_materia csm ON uc.carrera = csm.carrera INNER JOIN inscripcion_materia im ON u.id = im.usuario INNER JOIN grupo g ON im.grupo = g.id WHERE u.rol = 3 AND g.id IN( SELECT DISTINCT grupo FROM inscripcion_materia WHERE usuario = ?) ORDER BY u.nombres,u.apellidos,g.nombre ASC ", array($id));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function search_users($name, $document) {        $record_set = $this->conn->db->Execute('SELECT id, usuario, clave, correo FROM usuario WHERE id = ?', array($id));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user($document) {        $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE documento = ?', array($document));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user_only_students($document) {        $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE documento = ? AND rol = 3', array($document));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user_profile($id) {        $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE id = ?', array($id));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user_search($document, $name = "", $order, $index, $page) {        if (!empty($document) && !empty($name)) {            $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE documento = ? and CONCAT(nombres," ",apellidos) LIKE ? ORDER BY ' . $order . ' LIMIT ' . $index . ',' . $page, array($document, "%" . $name . "%"));        } else {            if (!empty($document) && empty($name)) {                $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE documento = ? ORDER BY ' . $order . ' LIMIT ' . $index . ',' . $page, array($document));            } else {                $record_set = $this->conn->db->Execute('SELECT * FROM usuario WHERE CONCAT(nombres," ",apellidos) LIKE ? ORDER BY ' . $order . ' LIMIT ' . $index . ',' . $page, array("%" . $name . "%"));            }        }        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user_login($username, $password) {        $record_set = $this->conn->db->Execute("SELECT id, usuario, clave, correo, rol, nombres, apellidos, documento FROM usuario WHERE usuario = ? AND clave = ? ", array($username, $password));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function get_user_login_by_email($email) {        $record_set = $this->conn->db->Execute("SELECT id, usuario, clave, correo, rol FROM usuario WHERE correo = ? ", array($email));        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }    function insert_user($name, $lastname, $document, $username, $password, $email, $code, $role, $modality) {        $this->audit->register_audit(1, 'INSERT INTO usuario(nombres, apellidos, documento, usuario, clave, correo, codigo, rol) VALUES(?,?,?,?,?,?,?,?)', $_SESSION['id']);        return $this->conn->db->Execute('INSERT INTO usuario(nombres, apellidos, documento, usuario, clave, correo, codigo, rol, modalidad) VALUES(?,?,?,?,?,?,?,?,?) ', array($name, $lastname, $document, $username, $password, $email, $code, $role, $modality));    }    function update_user($id, $name, $lastname, $document, $username, $password, $email, $code, $role, $modality) {        $this->audit->register_audit(2, 'UPDATE usuario SET nombres = ?, apellidos = ?, documento = ?, usuario = ?, clave = ?, correo = ?, codigo = ?, rol = ? WHERE id = ?', $_SESSION['id']);        return $this->conn->db->Execute('UPDATE usuario SET nombres = ?, apellidos = ?, documento = ?, usuario = ?, clave = ?, correo = ?, codigo = ?, rol = ?, modalidad = ? WHERE id = ? ', array($name, $lastname, $document, $username, $password, $email, $code, $role, $modality, $id));    }    function update_user_profile($id, $email, $password) {        $this->audit->register_audit(2, 'UPDATE usuario SET correo = ?, clave = ? WHERE id = ?', $_SESSION['id']);        return $this->conn->db->Execute('UPDATE usuario SET correo = ?, clave = ? WHERE id = ? ', array($email, $password, $id));    }    function delete_user($id) {        $this->audit->register_audit(3, 'DELETE FROM usuario WHERE id = ?', $_SESSION['id']);        return $this->conn->db->Execute('DELETE FROM usuario WHERE id = ?', array($id));    }    function change_password($id, $password) {        $this->audit->register_audit(2, 'UPDATE usuario SET clave = ? WHERE id = ?', $_SESSION['id']);        return $this->conn->db->Execute('UPDATE usuario SET clave = ? WHERE id = ?', array($password, $id));    }        function get_modalities_payment(){        $record_set = $this->conn->db->Execute("SELECT id, nombre, valor, CONCAT(nombre, ' (', FORMAT(valor,0), ') ') as descripcion FROM modalidad ORDER BY id DESC ");        if ($record_set != false) {            return $record_set;        } else {            return null;        }    }}?>