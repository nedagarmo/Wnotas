<?php/*		Clase de métodos de inserción, modificación, eliminación y consulta sobre la tabla carreras * * @author Nelson D. Garzón M.	*/@session_start();include_once(dirname(__FILE__) . '/../data.bases/connection.mysql.class.php');include_once(dirname(__FILE__) . '/audit.dao.class.php');class notes {    private $conn;	private $audit;        function notes()    {        $this->conn = new connection();		$this->audit = new audit();            }	function get_all_count_notes()    {        $record_set = $this->conn->db->Execute('SELECT COUNT(*) FROM nota');        if($record_set != false)        {            return $record_set;        }  else {            return null;        }    }	    function get_all_notes($group, $order, $index, $page)    {        $record_set = $this->conn->db->Execute('SELECT * FROM nota WHERE usuario IN (SELECT DISTINCT u.id FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo IN (SELECT g.id FROM grupo g INNER JOIN inscripcion_materia im ON g.id = im.grupo WHERE g.id = ?)) ORDER BY '.$order.' LIMIT '.$index.','.$page, array($group));        if($record_set != false)        {            return $record_set;        }  else {            return null;        }    }		function get_all_notes_by_teacher($user, $group, $order, $index, $page)    {        $record_set = $this->conn->db->Execute('SELECT * FROM nota WHERE usuario IN (SELECT DISTINCT u.id FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo IN (SELECT g.id FROM grupo g INNER JOIN inscripcion_materia im ON g.id = im.grupo WHERE im.usuario = ? AND g.id = ?) AND u.id <> ?) ORDER BY '.$order.' LIMIT '.$index.','.$page, array($user, $group, $user));        if($record_set != false)        {            return $record_set;        }  else {            return null;        }    }		function get_note($user, $subject, $type_note, $note, $equivalence)    {		$record_set = $this->conn->db->Execute(' SELECT * FROM nota WHERE usuario = ? AND materia = ? AND tipo_nota = ? AND nota = ? AND equivalencia = ? ', array($user, $subject, $type_note, $note, $equivalence));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }        function get_notes_by_user($user)    {    	$record_set = $this->conn->db->Execute(' SELECT n.*, tn.nombre as n_tipo_nota, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id WHERE n.usuario = ? AND u.rol = 3 ORDER BY u.nombres, n.tipo_nota ASC ', array($user));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_notes_by_user_and_group($user, $group)    {    	$record_set = $this->conn->db->Execute(' SELECT n.*, tn.nombre as n_tipo_nota, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE n.usuario = ? AND u.rol = 3 AND im.grupo = ? ORDER BY u.nombres, n.tipo_nota ASC ', array($user, $group));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_current_notes_by_user($user)    {    	$record_set = $this->conn->db->Execute(' SELECT n.*, tn.nombre as n_tipo_nota, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id WHERE m.id IN (SELECT DISTINCT m.id FROM inscripcion_materia im INNER JOIN carrera_semestre_materia csm ON im.carrera_semestre_materia = csm.id INNER JOIN materia m ON csm.materia = m.id  WHERE im.usuario = ?) AND n.usuario = ? AND u.rol = 3 ORDER BY m.nombre, n.tipo_nota ASC ', array($user, $user));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_notes_by_subject($subject)    {    	$record_set = $this->conn->db->Execute(' SELECT n.*, tn.nombre as n_tipo_nota, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id WHERE n.materia = ? AND u.rol = 3 ORDER BY m.nombre, n.equivalencia, n.tipo_nota ASC ', array($subject));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_subjects_by_user($user)    {    	$record_set = $this->conn->db->Execute(' SELECT DISTINCT m.id, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id WHERE n.usuario = ? AND u.rol = 3 ORDER BY u.nombres, n.tipo_nota ASC ', array($user));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_semesters_by_user($user)    {    	$record_set = $this->conn->db->Execute('SELECT DISTINCT m.id, m.nombre AS n_materia, s.sigla  												FROM nota n												INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id												INNER JOIN materia m ON n.materia = m.id												INNER JOIN usuario u ON n.usuario = u.id												INNER JOIN inscripcion_materia im ON u.id = im.usuario												INNER JOIN carrera_semestre_materia csm ON im.carrera_semestre_materia = csm.id												INNER JOIN semestre s ON csm.semestre = s.id WHERE n.usuario = ? AND u.rol = 3 ORDER BY u.nombres, n.tipo_nota ASC ', array($user));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_subjects_current_by_user($user)    {    	$record_set = $this->conn->db->Execute(' SELECT DISTINCT m.id, m.nombre as n_materia FROM nota n INNER JOIN tipo_nota tn ON n.tipo_nota = tn.id INNER JOIN materia m ON n.materia = m.id INNER JOIN usuario u ON n.usuario = u.id WHERE n.usuario = ? AND u.rol = 3 ORDER BY n.id DESC LIMIT 6 ', array($user));			        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }        function get_note_search($group, $name = "", $order, $index, $page)    {		if(!empty($name)){			$record_set = $this->conn->db->Execute("SELECT n.* FROM nota n INNER JOIN usuario u ON n.usuario = u.id INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE CONCAT(u.nombres, ' ',u.apellidos) LIKE ? AND im.grupo = ? ORDER BY ".$order.' LIMIT '.$index.','.$page, array("%".$name."%", $group));		}else{			$record_set = $this->conn->db->Execute('SELECT n.* FROM nota n INNER JOIN usuario u ON n.usuario = u.id INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo = ? ORDER BY '.$order.' LIMIT '.$index.','.$page, array($group));		}		        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function get_note_search_by_teacher($user, $group, $name = "", $order, $index, $page)    {		if(!empty($name)){			$record_set = $this->conn->db->Execute("SELECT n.* FROM nota n INNER JOIN usuario u ON n.usuario = u.id WHERE n.usuario IN (SELECT DISTINCT u.id FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo IN (SELECT g.id FROM grupo g INNER JOIN inscripcion_materia im ON g.id = im.grupo WHERE g.id = ? AND im.usuario = ?) AND u.id <> ?) AND CONCAT(u.nombres, ' ',u.apellidos) LIKE ? ORDER BY ".$order.' LIMIT '.$index.','.$page, array($group, $user, $user, "%".$name."%"));		}else{			$record_set = $this->conn->db->Execute('SELECT n.* FROM nota n WHERE n.usuario IN (SELECT DISTINCT u.id FROM usuario u INNER JOIN inscripcion_materia im ON u.id = im.usuario WHERE im.grupo IN (SELECT g.id FROM grupo g INNER JOIN inscripcion_materia im ON g.id = im.grupo WHERE g.id = ? AND im.usuario = ?) AND u.id <> ?) ORDER BY '.$order.' LIMIT '.$index.','.$page, array($group, $user, $user));		}		        if($record_set != false)        {            return $record_set;        }  else {            return null;        }     }		function validate_equivalence($user, $subject, $type_note, $note, $equivalence, $update, $id)    {        $result = $this->conn->db->Execute('SELECT SUM(equivalencia) AS equivalencia_total FROM nota WHERE materia = ? AND usuario = ? AND tipo_nota = 1 ', array($subject, $user));		while(!$result->EOF){			if($update){				$result2 = $this->conn->db->Execute('SELECT equivalencia FROM nota WHERE id = ? ', array($id));				$equivalence = $result2->fields[0] - $equivalence;				if(($result->fields[0] + $equivalence) > 100 || ($result->fields[0] + $equivalence) < -100){					return false;				}else{					return true;				}			}else{				if(($result->fields[0] + $equivalence) > 100 || ($result->fields[0] + $equivalence) < -100){					return false;				}else{					return true;				}			}			$result->MoveNext();		}    }       function insert_note($user, $subject, $type_note, $note, $equivalence)    {		$this->audit->register_audit(1, 'INSERT INTO nota(usuario, materia, tipo_nota, nota, equivalencia) VALUES(?,?,?,?,?)', $_SESSION['id']);        return $this->conn->db->Execute('INSERT INTO nota(usuario, materia, tipo_nota, nota, equivalencia) VALUES(?,?,?,?,?) ', 			   array($user, $subject, $type_note, $note, $equivalence));    }		function update_note($id, $user, $subject, $type_note, $note, $equivalence)    {		$this->audit->register_audit(2, 'UPDATE nota SET usuario = ?, materia = ?, tipo_nota = ?, nota = ?, equivalencia = ? WHERE id = ? ', $_SESSION['id']);        return $this->conn->db->Execute('UPDATE nota SET usuario = ?, materia = ?, tipo_nota = ?, nota = ?, equivalencia = ? WHERE id = ? ', 			   array($user, $subject, $type_note, $note, $equivalence, $id));    }        function delete_note($id)    {		$this->audit->register_audit(3, 'DELETE FROM nota WHERE id = ?', $_SESSION['id']);        return $this->conn->db->Execute('DELETE FROM nota WHERE id = ?', array($id));    }}	?>